#BlueJ class context
comment0.params=destination\ deliveryTime\ orderedTime\ isUrgent
comment0.target=Pizza(java.lang.String,\ int,\ int,\ boolean)
comment0.text=\n\ Constructs\ a\ new\ Pizza\ object\n\ \n\ @param\ destination\ -\ the\ name\ of\ the\ destination\ \ \n\ @param\ deliveryTime\ -\ the\ time\ it\ takes\ to\ deliver\ this\ pizza\n\ @param\ orderedTime\ -\ the\ time\ stamp\ when\ the\ order\ for\ this\ pizza\ came\ in\n\ @isUrgent\ -\ is\ true\ when\ the\ pizza\ has\ been\ ordered\ as\ being\ "urgent"\n
comment1.params=
comment1.target=java.lang.String\ destination()
comment2.params=
comment2.target=int\ deadline()
comment3.params=
comment3.target=int\ deliveryTime()
comment4.params=
comment4.target=int\ orderedTime()
comment5.params=
comment5.target=boolean\ isUrgent()
comment6.params=
comment6.target=double\ price()
comment6.text=\n\ Pizza\ price.\n\ \n\ @returns\ the\ price\ of\ the\ pizza,\ depending\ on\ whether\ it\ is\ an\ urgent\ delivery\ or\ not.\ \n
comment7.params=
comment7.target=double\ latePrice()
comment7.text=\n\ Pizza\ price\ if\ delivered\ lated.\n\ \n\ @returns\ the\ prize\ of\ the\ pizza,\ multiplied\ by\ the\ 'late\ delivery'\ penalty\ factor.\n
comment8.params=other
comment8.target=int\ compareTo(Pizza)
comment8.text=\ \n\ Compares\ two\ pizzas\ in\ terms\ of\ their\ deadline.\n\ \n\ This\ pizza\ is\ comes\ before\ another\ other\ pizza\ in\ an\ ordering\ if\n\ its\ deadline\ is\ earlier.\n
comment9.params=
comment9.target=java.lang.String\ toString()
numComments=10
